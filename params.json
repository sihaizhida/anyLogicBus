{"name":"Anylogicbus","tagline":"一个高效的轻量级服务框架","body":"anyLogicBus readme\r\n==================\r\n\r\n一个高效的轻量级服务框架\r\n\r\n### 特征\r\nanyLogicBus是一个高效的,可扩展的,轻量级服务框架,具有下列特征:\r\n \r\n - 服务路由，将HTTP请求分发给具体服务模块；\r\n \r\n - 访问控制，支持多种访问控制策略，并且可定制；\r\n \r\n - 插件式服务模块，提供服务规范，支持定制开发\r\n \r\n - 可定制的服务目录，支持多种形式的服务目录\r\n \r\n - 内置多种管理服务\r\n \r\n - 可部署成集群管理模式，分为元数据服务器，监控服务器，服务节点进行部署\r\n \r\n - 基于anyWebLoader自动更新框架\r\n \r\n### 版本\r\n \r\n - 1.0.0 [20140327 duanyy]\r\n     + 首次发布\r\n     \r\n - 1.0.1 [20140402 duanyy]\r\n     + 改进访问控制模型，以避免SessionID多次计算\r\n     \r\n - 1.0.2 [20140407 duanyy]\r\n     + 修改{@link com.logicbus.backend.server.MessageRouter MessageRouter},\r\n     采用{@link java.util.concurrent.CountDownLatch CountDownLatch}来等待服务执行。\r\n     \r\n - 1.0.3 [20140410 duanyy]\r\n     + 在{@link com.logicbus.models.servant.ServiceDescription ServiceDescription}中增加调用参数列表\r\n     + 在{@link com.logicbus.backend.Servant Servant}增加调用参数读取的封装函数 \r\n \r\n - 1.0.4 [20140410 duanyy]\r\n     + 增加Raw消息，见{@link com.logicbus.backend.message.RawMessage RawMessage}\r\n     + 增加客户端调用框架，见{@link com.logicbus.client Client}\r\n - 1.0.5 [20140412 duanyy]\r\n     + 改进消息传递模型\r\n     + 增加开发文档(development.md)，并增加一些案例(com.logicbus.examples)\r\n     \r\n     ","google":"anyLogicBus","note":"Don't delete this file! It's used internally to help with page regeneration."}